digraph "classes" {
rankdir=BT
charset="utf-8"
"funman.model.petrinet.AbstractPetriNetModel" [color="black", fontcolor="black", label=<AbstractPetriNetModel>, shape="record", style="solid"];
"funman.model.regnet.AbstractRegnetModel" [color="black", fontcolor="black", label=<AbstractRegnetModel>, shape="record", style="solid"];
"funman.scenario.scenario.AnalysisScenario" [color="black", fontcolor="black", label=<AnalysisScenario>, shape="record", style="solid"];
"funman.scenario.scenario.AnalysisScenarioResult" [color="black", fontcolor="black", label=<AnalysisScenarioResult>, shape="record", style="solid"];
"funman.scenario.scenario.AnalysisScenarioResultException" [color="black", fontcolor="red", label=<AnalysisScenarioResultException>, shape="record", style="solid"];
"funman.representation.assumption.Assumption" [color="black", fontcolor="black", label=<Assumption>, shape="record", style="solid"];
"funman.model.generated_models.regnet.BaseProperties" [color="black", fontcolor="black", label=<BaseProperties>, shape="record", style="solid"];
"funman.model.bilayer.BilayerDynamics" [color="black", fontcolor="black", label=<BilayerDynamics>, shape="record", style="solid"];
"funman.model.bilayer.BilayerEdge" [color="black", fontcolor="black", label=<BilayerEdge>, shape="record", style="solid"];
"funman.translate.bilayer.BilayerEncoder" [color="black", fontcolor="black", label=<BilayerEncoder>, shape="record", style="solid"];
"funman.model.bilayer.BilayerFluxNode" [color="black", fontcolor="black", label=<BilayerFluxNode>, shape="record", style="solid"];
"funman.model.bilayer.BilayerGraph" [color="black", fontcolor="black", label=<BilayerGraph>, shape="record", style="solid"];
"funman.model.bilayer.BilayerMeasurement" [color="black", fontcolor="black", label=<BilayerMeasurement>, shape="record", style="solid"];
"funman.model.bilayer.BilayerMetadata" [color="black", fontcolor="black", label=<BilayerMetadata>, shape="record", style="solid"];
"funman.model.bilayer.BilayerModel" [color="black", fontcolor="black", label=<BilayerModel>, shape="record", style="solid"];
"funman.model.bilayer.BilayerNegativeEdge" [color="black", fontcolor="black", label=<BilayerNegativeEdge>, shape="record", style="solid"];
"funman.model.bilayer.BilayerNode" [color="black", fontcolor="black", label=<BilayerNode>, shape="record", style="solid"];
"funman.model.bilayer.BilayerPositiveEdge" [color="black", fontcolor="black", label=<BilayerPositiveEdge>, shape="record", style="solid"];
"funman.model.bilayer.BilayerStateNode" [color="black", fontcolor="black", label=<BilayerStateNode>, shape="record", style="solid"];
"funman.representation.box.Box" [color="black", fontcolor="black", label=<Box>, shape="record", style="solid"];
"funman.representation.explanation.BoxExplanation" [color="black", fontcolor="black", label=<BoxExplanation>, shape="record", style="solid"];
"funman.search.box_search.BoxSearch" [color="black", fontcolor="black", label=<BoxSearch>, shape="record", style="solid"];
"funman.search.box_search.BoxSearchEpisode" [color="black", fontcolor="black", label=<BoxSearchEpisode>, shape="record", style="solid"];
"funman.search.box_search.BoxSearchEpisodeMP" [color="black", fontcolor="black", label=<BoxSearchEpisodeMP>, shape="record", style="solid"];
"funman.scenario.consistency.ConsistencyScenario" [color="black", fontcolor="black", label=<ConsistencyScenario>, shape="record", style="solid"];
"funman.scenario.consistency.ConsistencyScenarioResult" [color="black", fontcolor="black", label=<ConsistencyScenarioResult>, shape="record", style="solid"];
"funman.representation.constraint.Constraint" [color="black", fontcolor="black", label=<Constraint>, shape="record", style="solid"];
"funman.model.decapode.DecapodeDynamics" [color="black", fontcolor="black", label=<DecapodeDynamics>, shape="record", style="solid"];
"funman.translate.decapode.DecapodeEncoder" [color="black", fontcolor="black", label=<DecapodeEncoder>, shape="record", style="solid"];
"funman.model.decapode.DecapodeModel" [color="black", fontcolor="black", label=<DecapodeModel>, shape="record", style="solid"];
"funman.translate.translate.DefaultEncoder" [color="black", fontcolor="black", label=<DefaultEncoder>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Distribution" [color="black", fontcolor="black", label=<Distribution>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Distribution" [color="black", fontcolor="black", label=<Distribution>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Edge" [color="black", fontcolor="black", label=<Edge>, shape="record", style="solid"];
"funman.translate.encoded.EncodedEncoder" [color="black", fontcolor="black", label=<EncodedEncoder>, shape="record", style="solid"];
"funman.model.encoded.EncodedModel" [color="black", fontcolor="black", label=<EncodedModel>, shape="record", style="solid"];
"funman.translate.translate.Encoder" [color="black", fontcolor="black", label=<Encoder>, shape="record", style="solid"];
"funman.translate.encoding.Encoding" [color="black", fontcolor="black", label=<Encoding>, shape="record", style="solid"];
"funman.translate.encoding.EncodingOptions" [color="black", fontcolor="black", label=<EncodingOptions>, shape="record", style="solid"];
"funman.representation.encoding_schedule.EncodingSchedule" [color="black", fontcolor="black", label=<EncodingSchedule>, shape="record", style="solid"];
"funman.translate.ensemble.EnsembleEncoder" [color="black", fontcolor="black", label=<EnsembleEncoder>, shape="record", style="solid"];
"funman.model.ensemble.EnsembleModel" [color="black", fontcolor="black", label=<EnsembleModel>, shape="record", style="solid"];
"funman.representation.explanation.Explanation" [color="black", fontcolor="black", label=<Explanation>, shape="record", style="solid"];
"funman.config.FUNMANConfig" [color="black", fontcolor="black", label=<FUNMANConfig>, shape="record", style="solid"];
"funman.utils.sympy_utils.FUNMANFormulaManager" [color="black", fontcolor="black", label=<FUNMANFormulaManager>, shape="record", style="solid"];
"funman.translate.simplifier.FUNMANSimplifier" [color="black", fontcolor="black", label=<FUNMANSimplifier>, shape="record", style="solid"];
"funman.utils.smtlib_utils.FUNMANSmtDagPrinter" [color="black", fontcolor="black", label=<FUNMANSmtDagPrinter>, shape="record", style="solid"];
"funman.utils.smtlib_utils.FUNMANSmtLibScript" [color="black", fontcolor="black", label=<FUNMANSmtLibScript>, shape="record", style="solid"];
"funman.utils.smtlib_utils.FUNMANSmtPrinter" [color="black", fontcolor="black", label=<FUNMANSmtPrinter>, shape="record", style="solid"];
"funman.translate.encoding.FlatEncoding" [color="black", fontcolor="black", label=<FlatEncoding>, shape="record", style="solid"];
"funman.search.box_search.FormulaStack" [color="black", fontcolor="black", label=<FormulaStack>, shape="record", style="solid"];
"funman.search.box_search.FormulaStackFrame" [color="black", fontcolor="black", label=<FormulaStackFrame>, shape="record", style="solid"];
"funman.funman.Funman" [color="black", fontcolor="black", label=<Funman>, shape="record", style="solid"];
"funman.server.exception.FunmanException" [color="black", fontcolor="red", label=<FunmanException>, shape="record", style="solid"];
"funman.model.model.FunmanModel" [color="black", fontcolor="black", label=<FunmanModel>, shape="record", style="solid"];
"funman.server.query.FunmanProgress" [color="black", fontcolor="black", label=<FunmanProgress>, shape="record", style="solid"];
"funman.server.query.FunmanResults" [color="black", fontcolor="black", label=<FunmanResults>, shape="record", style="solid"];
"funman.server.query.FunmanResultsTiming" [color="black", fontcolor="black", label=<FunmanResultsTiming>, shape="record", style="solid"];
"funman.server.query.FunmanWorkRequest" [color="black", fontcolor="black", label=<FunmanWorkRequest>, shape="record", style="solid"];
"funman.server.query.FunmanWorkUnit" [color="black", fontcolor="black", label=<FunmanWorkUnit>, shape="record", style="solid"];
"funman.server.worker.FunmanWorker" [color="black", fontcolor="black", label=<FunmanWorker>, shape="record", style="solid"];
"funman.server.exception.FunmanWorkerException" [color="black", fontcolor="red", label=<FunmanWorkerException>, shape="record", style="solid"];
"funman.model.petrinet.GeneratedPetriNetModel" [color="black", fontcolor="black", label=<GeneratedPetriNetModel>, shape="record", style="solid"];
"funman.model.regnet.GeneratedRegnetModel" [color="black", fontcolor="black", label=<GeneratedRegnetModel>, shape="record", style="solid"];
"funman.api.run.GracefulKiller" [color="black", fontcolor="black", label=<GracefulKiller>, shape="record", style="solid"];
"funman.translate.gromet.GrometEncoder" [color="black", fontcolor="black", label=<GrometEncoder>, shape="record", style="solid"];
"funman.translate.gromet.GrometEncodingOptions" [color="black", fontcolor="black", label=<GrometEncodingOptions>, shape="record", style="solid"];
"funman.model.gromet.GrometModel" [color="black", fontcolor="black", label=<GrometModel>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Grounding" [color="black", fontcolor="black", label=<Grounding>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Grounding" [color="black", fontcolor="black", label=<Grounding>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Header" [color="black", fontcolor="black", label=<Header>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Header" [color="black", fontcolor="black", label=<Header>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Initial" [color="black", fontcolor="black", label=<Initial>, shape="record", style="solid"];
"funman.representation.interval.Interval" [color="black", fontcolor="black", label=<Interval>, shape="record", style="solid"];
"funman.representation.parameter.LabeledParameter" [color="black", fontcolor="black", label=<LabeledParameter>, shape="record", style="solid"];
"funman.translate.translate.LayeredEncoding" [color="black", fontcolor="black", label=<LayeredEncoding>, shape="record", style="solid"];
"funman.representation.constraint.LinearConstraint" [color="black", fontcolor="black", label=<LinearConstraint>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Model" [color="black", fontcolor="black", label=<Model>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Model" [color="black", fontcolor="black", label=<Model>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Model1" [color="black", fontcolor="black", label=<Model1>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Model1" [color="black", fontcolor="black", label=<Model1>, shape="record", style="solid"];
"funman.representation.constraint.ModelConstraint" [color="black", fontcolor="black", label=<ModelConstraint>, shape="record", style="solid"];
"funman.representation.parameter.ModelParameter" [color="black", fontcolor="black", label=<ModelParameter>, shape="record", style="solid"];
"funman.representation.symbol.ModelSymbol" [color="black", fontcolor="black", label=<ModelSymbol>, shape="record", style="solid"];
"funman.utils.handlers.NoopResultHandler" [color="black", fontcolor="black", label=<NoopResultHandler>, shape="record", style="solid"];
"funman.server.exception.NotFoundFunmanException" [color="black", fontcolor="red", label=<NotFoundFunmanException>, shape="record", style="solid"];
"funman.representation.parameter.NumSteps" [color="black", fontcolor="black", label=<NumSteps>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Observable" [color="black", fontcolor="black", label=<Observable>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.OdeSemantics" [color="black", fontcolor="black", label=<OdeSemantics>, shape="record", style="solid"];
"funman.model.generated_models.regnet.ParamOrNumber" [color="black", fontcolor="black", label=<ParamOrNumber>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Parameter" [color="black", fontcolor="black", label=<Parameter>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Parameter" [color="black", fontcolor="black", label=<Parameter>, shape="record", style="solid"];
"funman.representation.parameter.Parameter" [color="black", fontcolor="black", label=<Parameter>, shape="record", style="solid"];
"funman.representation.constraint.ParameterConstraint" [color="black", fontcolor="black", label=<ParameterConstraint>, shape="record", style="solid"];
"funman.representation.parameter_space.ParameterSpace" [color="black", fontcolor="black", label=<ParameterSpace>, shape="record", style="solid"];
"funman.representation.explanation.ParameterSpaceExplanation" [color="black", fontcolor="black", label=<ParameterSpaceExplanation>, shape="record", style="solid"];
"funman.scenario.parameter_synthesis.ParameterSynthesisScenario" [color="black", fontcolor="black", label=<ParameterSynthesisScenario>, shape="record", style="solid"];
"funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult" [color="black", fontcolor="black", label=<ParameterSynthesisScenarioResult>, shape="record", style="solid"];
"funman.model.petrinet.PetrinetDynamics" [color="black", fontcolor="black", label=<PetrinetDynamics>, shape="record", style="solid"];
"funman.translate.petrinet.PetrinetEncoder" [color="black", fontcolor="black", label=<PetrinetEncoder>, shape="record", style="solid"];
"funman.model.petrinet.PetrinetModel" [color="black", fontcolor="black", label=<PetrinetModel>, shape="record", style="solid"];
"funman.representation.representation.Point" [color="black", fontcolor="black", label=<Point>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Properties" [color="black", fontcolor="black", label=<Properties>, shape="record", style="solid"];
"funman.model.query.Query" [color="black", fontcolor="black", label=<Query>, shape="record", style="solid"];
"funman.model.query.QueryAnd" [color="black", fontcolor="black", label=<QueryAnd>, shape="record", style="solid"];
"funman.representation.constraint.QueryConstraint" [color="black", fontcolor="black", label=<QueryConstraint>, shape="record", style="solid"];
"funman.model.query.QueryEncoded" [color="black", fontcolor="black", label=<QueryEncoded>, shape="record", style="solid"];
"funman.model.query.QueryEquals" [color="black", fontcolor="black", label=<QueryEquals>, shape="record", style="solid"];
"funman.model.query.QueryFunction" [color="black", fontcolor="black", label=<QueryFunction>, shape="record", style="solid"];
"funman.model.query.QueryGE" [color="black", fontcolor="black", label=<QueryGE>, shape="record", style="solid"];
"funman.model.query.QueryLE" [color="black", fontcolor="black", label=<QueryLE>, shape="record", style="solid"];
"funman.model.query.QueryTrue" [color="black", fontcolor="black", label=<QueryTrue>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Rate" [color="black", fontcolor="black", label=<Rate>, shape="record", style="solid"];
"funman.model.regnet.RegnetDynamics" [color="black", fontcolor="black", label=<RegnetDynamics>, shape="record", style="solid"];
"funman.translate.regnet.RegnetEncoder" [color="black", fontcolor="black", label=<RegnetEncoder>, shape="record", style="solid"];
"funman.model.regnet.RegnetModel" [color="black", fontcolor="black", label=<RegnetModel>, shape="record", style="solid"];
"funman.utils.handlers.ResultCombinedHandler" [color="black", fontcolor="black", label=<ResultCombinedHandler>, shape="record", style="solid"];
"funman.utils.handlers.ResultHandler" [color="black", fontcolor="black", label=<ResultHandler>, shape="record", style="solid"];
"funman.api.run.Runner" [color="black", fontcolor="black", label=<Runner>, shape="record", style="solid"];
"funman.search.smt_check.SMTCheck" [color="black", fontcolor="black", label=<SMTCheck>, shape="record", style="solid"];
"funman.representation.parameter.Schedules" [color="black", fontcolor="black", label=<Schedules>, shape="record", style="solid"];
"funman.search.search.Search" [color="black", fontcolor="black", label=<Search>, shape="record", style="solid"];
"funman.search.search.SearchEpisode" [color="black", fontcolor="black", label=<SearchEpisode>, shape="record", style="solid"];
"funman.search.search.SearchStaticsMP" [color="black", fontcolor="black", label=<SearchStaticsMP>, shape="record", style="solid"];
"funman.search.search.SearchStatistics" [color="black", fontcolor="black", label=<SearchStatistics>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Semantics" [color="black", fontcolor="black", label=<Semantics>, shape="record", style="solid"];
"funman.api.server.Server" [color="black", fontcolor="black", label=<Server>, shape="record", style="solid"];
"funman.api.server.ServerConfig" [color="black", fontcolor="black", label=<ServerConfig>, shape="record", style="solid"];
"funman.api.settings.Settings" [color="black", fontcolor="black", label=<Settings>, shape="record", style="solid"];
"funman.model.generated_models.regnet.SignedGraphElement" [color="black", fontcolor="black", label=<SignedGraphElement>, shape="record", style="solid"];
"funman.scenario.simulation.SimulationScenario" [color="black", fontcolor="black", label=<SimulationScenario>, shape="record", style="solid"];
"funman.scenario.simulation.SimulationScenarioResult" [color="black", fontcolor="black", label=<SimulationScenarioResult>, shape="record", style="solid"];
"funman.search.simulate.Simulator" [color="black", fontcolor="black", label=<Simulator>, shape="record", style="solid"];
"funman.search.simulator_check.SimulatorCheck" [color="black", fontcolor="black", label=<SimulatorCheck>, shape="record", style="solid"];
"funman.model.simulator.SimulatorModel" [color="black", fontcolor="black", label=<SimulatorModel>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.State" [color="black", fontcolor="black", label=<State>, shape="record", style="solid"];
"funman.representation.constraint.StateVariableConstraint" [color="black", fontcolor="black", label=<StateVariableConstraint>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.States" [color="black", fontcolor="black", label=<States>, shape="record", style="solid"];
"funman.representation.parameter.StepSize" [color="black", fontcolor="black", label=<StepSize>, shape="record", style="solid"];
"funman.server.storage.Storage" [color="black", fontcolor="black", label=<Storage>, shape="record", style="solid"];
"funman.representation.parameter.StructureParameter" [color="black", fontcolor="black", label=<StructureParameter>, shape="record", style="solid"];
"funman.utils.sympy_utils.SympyBoundedSubstituter" [color="black", fontcolor="black", label=<SympyBoundedSubstituter>, shape="record", style="solid"];
"funman.utils.sympy_utils.SympySerializer" [color="black", fontcolor="black", label=<SympySerializer>, shape="record", style="solid"];
"funman.translate.simplifier.SympyToPysmt" [color="black", fontcolor="black", label=<SympyToPysmt>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Time" [color="black", fontcolor="black", label=<Time>, shape="record", style="solid"];
"funman.representation.constraint.TimedConstraint" [color="black", fontcolor="black", label=<TimedConstraint>, shape="record", style="solid"];
"funman.representation.explanation.TimeoutExplanation" [color="black", fontcolor="black", label=<TimeoutExplanation>, shape="record", style="solid"];
"funman.representation.representation.Timeseries" [color="black", fontcolor="black", label=<Timeseries>, shape="record", style="solid"];
"funman.representation.constraint.TimeseriesConstraint" [color="black", fontcolor="black", label=<TimeseriesConstraint>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Transition" [color="black", fontcolor="black", label=<Transition>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Transitions" [color="black", fontcolor="black", label=<Transitions>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.TypingSemantics" [color="black", fontcolor="black", label=<TypingSemantics>, shape="record", style="solid"];
"funman.model.generated_models.petrinet.Unit" [color="black", fontcolor="black", label=<Unit>, shape="record", style="solid"];
"funman.model.generated_models.regnet.Vertice" [color="black", fontcolor="black", label=<Vertice>, shape="record", style="solid"];
"funman.utils.handlers.WaitAction" [color="black", fontcolor="black", label=<WaitAction>, shape="record", style="solid"];
"funman.server.worker.WorkerState" [color="black", fontcolor="black", label=<WorkerState>, shape="record", style="solid"];
"funman.model.bilayer.BilayerDynamics" -> "funman.model.bilayer.BilayerGraph" [arrowhead="empty", arrowtail="none"];
"funman.model.bilayer.BilayerFluxNode" -> "funman.model.bilayer.BilayerNode" [arrowhead="empty", arrowtail="none"];
"funman.model.bilayer.BilayerMeasurement" -> "funman.model.bilayer.BilayerGraph" [arrowhead="empty", arrowtail="none"];
"funman.model.bilayer.BilayerModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.bilayer.BilayerNegativeEdge" -> "funman.model.bilayer.BilayerEdge" [arrowhead="empty", arrowtail="none"];
"funman.model.bilayer.BilayerPositiveEdge" -> "funman.model.bilayer.BilayerEdge" [arrowhead="empty", arrowtail="none"];
"funman.model.bilayer.BilayerStateNode" -> "funman.model.bilayer.BilayerNode" [arrowhead="empty", arrowtail="none"];
"funman.model.decapode.DecapodeModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.encoded.EncodedModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.ensemble.EnsembleModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.generated_models.petrinet.Initial" -> "funman.model.generated_models.petrinet.Rate" [arrowhead="empty", arrowtail="none"];
"funman.model.generated_models.regnet.Edge" -> "funman.model.generated_models.regnet.SignedGraphElement" [arrowhead="empty", arrowtail="none"];
"funman.model.generated_models.regnet.Vertice" -> "funman.model.generated_models.regnet.BaseProperties" [arrowhead="empty", arrowtail="none"];
"funman.model.generated_models.regnet.Vertice" -> "funman.model.generated_models.regnet.SignedGraphElement" [arrowhead="empty", arrowtail="none"];
"funman.model.gromet.GrometModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.petrinet.AbstractPetriNetModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.petrinet.GeneratedPetriNetModel" -> "funman.model.petrinet.AbstractPetriNetModel" [arrowhead="empty", arrowtail="none"];
"funman.model.petrinet.PetrinetModel" -> "funman.model.petrinet.AbstractPetriNetModel" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryAnd" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryEncoded" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryEquals" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryFunction" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryGE" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryLE" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.query.QueryTrue" -> "funman.model.query.Query" [arrowhead="empty", arrowtail="none"];
"funman.model.regnet.AbstractRegnetModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.model.regnet.GeneratedRegnetModel" -> "funman.model.regnet.AbstractRegnetModel" [arrowhead="empty", arrowtail="none"];
"funman.model.regnet.RegnetModel" -> "funman.model.regnet.AbstractRegnetModel" [arrowhead="empty", arrowtail="none"];
"funman.model.simulator.SimulatorModel" -> "funman.model.model.FunmanModel" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.LinearConstraint" -> "funman.representation.constraint.TimedConstraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.ModelConstraint" -> "funman.representation.constraint.Constraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.ParameterConstraint" -> "funman.representation.constraint.Constraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.QueryConstraint" -> "funman.representation.constraint.TimedConstraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.StateVariableConstraint" -> "funman.representation.constraint.TimedConstraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.TimedConstraint" -> "funman.representation.constraint.Constraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.constraint.TimeseriesConstraint" -> "funman.representation.constraint.Constraint" [arrowhead="empty", arrowtail="none"];
"funman.representation.explanation.BoxExplanation" -> "funman.representation.explanation.Explanation" [arrowhead="empty", arrowtail="none"];
"funman.representation.explanation.ParameterSpaceExplanation" -> "funman.representation.explanation.Explanation" [arrowhead="empty", arrowtail="none"];
"funman.representation.explanation.TimeoutExplanation" -> "funman.representation.explanation.Explanation" [arrowhead="empty", arrowtail="none"];
"funman.representation.parameter.LabeledParameter" -> "funman.representation.parameter.Parameter" [arrowhead="empty", arrowtail="none"];
"funman.representation.parameter.ModelParameter" -> "funman.representation.parameter.LabeledParameter" [arrowhead="empty", arrowtail="none"];
"funman.representation.parameter.NumSteps" -> "funman.representation.parameter.StructureParameter" [arrowhead="empty", arrowtail="none"];
"funman.representation.parameter.Schedules" -> "funman.representation.parameter.StructureParameter" [arrowhead="empty", arrowtail="none"];
"funman.representation.parameter.StepSize" -> "funman.representation.parameter.StructureParameter" [arrowhead="empty", arrowtail="none"];
"funman.representation.parameter.StructureParameter" -> "funman.representation.parameter.LabeledParameter" [arrowhead="empty", arrowtail="none"];
"funman.scenario.consistency.ConsistencyScenario" -> "funman.scenario.scenario.AnalysisScenario" [arrowhead="empty", arrowtail="none"];
"funman.scenario.consistency.ConsistencyScenarioResult" -> "funman.scenario.scenario.AnalysisScenarioResult" [arrowhead="empty", arrowtail="none"];
"funman.scenario.parameter_synthesis.ParameterSynthesisScenario" -> "funman.scenario.scenario.AnalysisScenario" [arrowhead="empty", arrowtail="none"];
"funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult" -> "funman.scenario.scenario.AnalysisScenarioResult" [arrowhead="empty", arrowtail="none"];
"funman.scenario.scenario.AnalysisScenarioResultException" -> "funman.scenario.scenario.AnalysisScenarioResult" [arrowhead="empty", arrowtail="none"];
"funman.scenario.simulation.SimulationScenario" -> "funman.scenario.scenario.AnalysisScenario" [arrowhead="empty", arrowtail="none"];
"funman.scenario.simulation.SimulationScenarioResult" -> "funman.scenario.scenario.AnalysisScenarioResult" [arrowhead="empty", arrowtail="none"];
"funman.search.box_search.BoxSearch" -> "funman.search.search.Search" [arrowhead="empty", arrowtail="none"];
"funman.search.box_search.BoxSearchEpisode" -> "funman.search.search.SearchEpisode" [arrowhead="empty", arrowtail="none"];
"funman.search.box_search.BoxSearchEpisodeMP" -> "funman.search.box_search.BoxSearchEpisode" [arrowhead="empty", arrowtail="none"];
"funman.search.search.SearchStaticsMP" -> "funman.search.search.SearchStatistics" [arrowhead="empty", arrowtail="none"];
"funman.search.simulator_check.SimulatorCheck" -> "funman.search.search.Search" [arrowhead="empty", arrowtail="none"];
"funman.search.smt_check.SMTCheck" -> "funman.search.search.Search" [arrowhead="empty", arrowtail="none"];
"funman.server.exception.FunmanWorkerException" -> "funman.server.exception.FunmanException" [arrowhead="empty", arrowtail="none"];
"funman.server.exception.NotFoundFunmanException" -> "funman.server.exception.FunmanException" [arrowhead="empty", arrowtail="none"];
"funman.translate.bilayer.BilayerEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.translate.decapode.DecapodeEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.translate.encoded.EncodedEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.translate.ensemble.EnsembleEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.translate.gromet.GrometEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.translate.gromet.GrometEncodingOptions" -> "funman.translate.encoding.EncodingOptions" [arrowhead="empty", arrowtail="none"];
"funman.translate.petrinet.PetrinetEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.translate.regnet.RegnetEncoder" -> "funman.translate.translate.Encoder" [arrowhead="empty", arrowtail="none"];
"funman.utils.handlers.NoopResultHandler" -> "funman.utils.handlers.ResultHandler" [arrowhead="empty", arrowtail="none"];
"funman.utils.handlers.ResultCombinedHandler" -> "funman.utils.handlers.ResultHandler" [arrowhead="empty", arrowtail="none"];
"funman.api.settings.Settings" -> "funman.api.run.Runner" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="settings", style="solid"];
"funman.model.bilayer.BilayerDynamics" -> "funman.model.bilayer.BilayerModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bilayer", style="solid"];
"funman.model.bilayer.BilayerNode" -> "funman.model.bilayer.BilayerEdge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="src", style="solid"];
"funman.model.bilayer.BilayerNode" -> "funman.model.bilayer.BilayerEdge" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tgt", style="solid"];
"funman.model.decapode.DecapodeDynamics" -> "funman.model.decapode.DecapodeModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="decapode", style="solid"];
"funman.model.generated_models.petrinet.Header" -> "funman.model.generated_models.petrinet.Model" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="header", style="solid"];
"funman.model.generated_models.petrinet.Model" -> "funman.model.generated_models.petrinet.TypingSemantics" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="system", style="solid"];
"funman.model.generated_models.petrinet.Model" -> "funman.model.petrinet.GeneratedPetriNetModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="petrinet", style="solid"];
"funman.model.generated_models.petrinet.Model1" -> "funman.model.generated_models.petrinet.Model" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"funman.model.generated_models.petrinet.States" -> "funman.model.generated_models.petrinet.Model1" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="states", style="solid"];
"funman.model.generated_models.petrinet.Transitions" -> "funman.model.generated_models.petrinet.Model1" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transitions", style="solid"];
"funman.model.generated_models.regnet.Header" -> "funman.model.generated_models.regnet.Model" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="header", style="solid"];
"funman.model.generated_models.regnet.Model" -> "funman.model.regnet.GeneratedRegnetModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="regnet", style="solid"];
"funman.model.generated_models.regnet.Model1" -> "funman.model.generated_models.regnet.Model" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"funman.model.model.FunmanModel" -> "funman.representation.constraint.ModelConstraint" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"funman.model.model.FunmanModel" -> "funman.search.simulate.Simulator" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"funman.model.petrinet.PetrinetDynamics" -> "funman.model.petrinet.PetrinetModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="petrinet", style="solid"];
"funman.model.query.Query" -> "funman.representation.constraint.QueryConstraint" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="query", style="solid"];
"funman.model.query.Query" -> "funman.scenario.simulation.SimulationScenario" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="query", style="solid"];
"funman.model.regnet.RegnetDynamics" -> "funman.model.regnet.RegnetModel" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="regnet", style="solid"];
"funman.model.simulator.SimulatorModel" -> "funman.scenario.simulation.SimulationScenario" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"funman.representation.encoding_schedule.EncodingSchedule" -> "funman.search.box_search.BoxSearchEpisode" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="schedule", style="solid"];
"funman.representation.encoding_schedule.EncodingSchedule" -> "funman.search.search.SearchEpisode" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="schedule", style="solid"];
"funman.representation.encoding_schedule.EncodingSchedule" -> "funman.translate.encoding.EncodingOptions" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="schedule", style="solid"];
"funman.representation.parameter_space.ParameterSpace" -> "funman.scenario.consistency.ConsistencyScenarioResult" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameter_space", style="solid"];
"funman.representation.parameter_space.ParameterSpace" -> "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameter_space", style="solid"];
"funman.representation.representation.Timeseries" -> "funman.representation.constraint.TimeseriesConstraint" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="timeseries", style="solid"];
"funman.scenario.consistency.ConsistencyScenario" -> "funman.scenario.consistency.ConsistencyScenarioResult" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scenario", style="solid"];
"funman.scenario.parameter_synthesis.ParameterSynthesisScenario" -> "funman.scenario.parameter_synthesis.ParameterSynthesisScenarioResult" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scenario", style="solid"];
"funman.scenario.scenario.AnalysisScenario" -> "funman.search.search.SearchEpisode" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="problem", style="solid"];
"funman.scenario.simulation.SimulationScenario" -> "funman.scenario.simulation.SimulationScenarioResult" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scenario", style="solid"];
"funman.search.box_search.FormulaStack" -> "funman.search.box_search.BoxSearchEpisode" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_formula_stack", style="solid"];
"funman.search.search.SearchStaticsMP" -> "funman.search.box_search.BoxSearchEpisodeMP" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="statistics", style="solid"];
"funman.search.search.SearchStatistics" -> "funman.search.box_search.BoxSearchEpisode" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="statistics", style="solid"];
"funman.server.query.FunmanProgress" -> "funman.server.query.FunmanResults" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="progress", style="solid"];
"funman.server.query.FunmanProgress" -> "funman.server.query.FunmanWorkUnit" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="progress", style="solid"];
"funman.server.query.FunmanResultsTiming" -> "funman.server.query.FunmanResults" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="timing", style="solid"];
"funman.server.query.FunmanWorkRequest" -> "funman.server.query.FunmanResults" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="request", style="solid"];
"funman.server.query.FunmanWorkRequest" -> "funman.server.query.FunmanWorkUnit" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="request", style="solid"];
"funman.server.storage.Storage" -> "funman.api.run.Runner" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_storage", style="solid"];
"funman.server.worker.FunmanWorker" -> "funman.api.run.Runner" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_worker", style="solid"];
"funman.representation.parameter_space.ParameterSpace" -> "funman.server.query.FunmanResults" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="parameter_space", style="solid"];
"funman.translate.encoded.EncodedEncoder" -> "funman.translate.translate.LayeredEncoding" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_encoder", style="solid"];
}
